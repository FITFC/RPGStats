plugins {
	id 'io.github.p03w.machete' version '1.+'
	id 'org.quiltmc.loom' version '+'
	id 'org.jetbrains.kotlin.jvm' version '1.7.10'
	id 'org.jetbrains.kotlin.plugin.serialization' version '1.7.10'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

repositories {
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}
	maven {
		name = "Curseforge"
		url "https://www.cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
	maven {
		name = "Jitpack"
		url = "https://jitpack.io"
	}
    maven {
		name = "Nucleoid"
        url "https://maven.nucleoid.xyz/"
    }
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	mavenLocal()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered {
		addLayer(quiltMappings.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${quilt_mappings}:v2"))
	}
	modImplementation "org.quiltmc:quilt-loader:${project.loader_version}"

	// QSL
	modImplementation "org.quiltmc:qsl:${qsl_version}+${minecraft_version}"
	modImplementation("org.quiltmc.quilted-fabric-api:quilted-fabric-api:+") {
		exclude(group: "org.quiltmc.qsl")
	}

	// QKL
	modImplementation("org.quiltmc.quilt-kotlin-libraries:quilt-kotlin-libraries:+") {
		exclude(group: "org.quiltmc.qsl")
	}

	// LibGui
	modImplementation "io.github.cottonmc:LibGui:${project.libgui_version}"
	include "io.github.cottonmc:LibGui:${project.libgui_version}"

	// Cardinal components base
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"

	// Cardinal components entity
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}"
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}"

	// Translations
	modImplementation "fr.catcore:server-translations-api:1.4.16+1.19"
	include "fr.catcore:server-translations-api:1.4.16+1.19"

	// Harvest scythes
	modImplementation "curse.maven:harvestscythes-412225:3823173"
	// Dependency for Harvest Scythes
	modImplementation("com.github.Chocohead:Fabric-ASM:v2.3") {
		exclude (group: "net.fabricmc.fabric-api")
	}

	// Harvest
	modImplementation 'curse.maven:simplerharvest-481720:3307870'

	/*
	// Artifality
	modImplementation 'curse.maven:artifality-490812:3650925'
	// Dependency for Artifality (Trinkets)
	modImplementation ("dev.emi:trinkets:3.3.0") {
		exclude (group: "net.fabricmc.fabric-api")
		exclude (group: "dev.onyxstudios.cardinal-components-api")
	}
	*/
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"

	it.options.release = 17
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
	kotlinOptions {
		jvmTarget = '17'
	}
}